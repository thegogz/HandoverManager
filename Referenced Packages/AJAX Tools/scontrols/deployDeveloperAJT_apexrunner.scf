<html>
<!--
Generated by AJAX tools
Date : Mon Dec 11 2006 22:24:07 GMT-0800 (Pacific Standard Time)
Template : simple.html by manoj@cheenath.com
Author : manoj
-->
<head>

<LINK REL="SHORTCUT ICON" HREF="/img/radardish_page_icon.gif">
<title>Run Apex</title>

<script src="/js/functions.js"></script>
<script src="/soap/ajax/10.0/connection.js"></script>
<script src="/soap/ajax/10.0/apex.js"></script>

<script type="text/javascript">

    if (!sforce.connection.sessionId) {
        var sid = getCookie("sid");
        if (sid) {
            sforce.connection.sessionId = sid;
        } else {
            window.location = "/?startURL=" + window.location;
        }
    }

</script>

<script src="/js/dojo/0.4.1/dojo.js"></script>
<script type="text/javascript">
var functions = [];
var className = null;
var classPrefix = null;

function init() {
    var index = document.URL.indexOf("?");
    var query = (index == -1) ? "" : document.URL.substring(index + 1);
    var queryParams = query.split("&");
    var id = null;
    for (var i = 0; i < queryParams.length; i++) {
        if (queryParams[i].indexOf("apexid=") === 0) {
            id = queryParams[i].substring("apexid=".length);
        }
    }

    var result = sforce.connection.retrieve("Name,Body,NamespacePrefix", "ApexClass", [id]);
    var code = result[0].Body;
    document.getElementById("title-div").innerHTML = result[0].Name;
    className = result[0].Name;
    classPrefix = result[0].NamespacePrefix;

    var stream = lex(code);

    for (var i = 0; i < stream.length; i++) {
        var ftags = [];
        if ("webservice" === stream[i].toLowerCase()) {
            while (i < stream.length) {
                if ("{" === stream[i]) {
                    functions.push(webServiceFunction(ftags));
                    break;
                } else {
                    ftags.push(stream[i]);
                    i++;
                }
            }
        }
    }

    var sb = new sforce.StringBuffer();
    for (var i = 0; i < functions.length; i++) {
        var fun = functions[i];
        //sb.append(fun.returnType).append(" ");
        sb.append("<a href=\"javascript: display(").append(i).append("); void 0;\"").append(fun.name);
        sb.append(">").append(fun.name).append("</a><br>");
        /*
        for (var a = 0; a < fun.args.length; a++) {
            var arg = fun.args[a];
            sb.append(arg.type).append(" ");
            sb.append(arg.name);
            if (a < fun.args.length - 1) {
                sb.append(",");
            }
        }*/
    }

    document.getElementById("function-list").innerHTML = sb.toString();
}

function display(index) {
    document.getElementById("function-result").innerHTML = "";
    
    var fun = functions[index];
    document.getElementById("function-title").innerHTML = fun.name;

    var sb = new sforce.StringBuffer();
    sb.append("<table width=\"100%\">");
    for (var a = 0; a < fun.args.length; a++) {
        sb.append("<tr><td>");
        var arg = fun.args[a];
        sb.append(arg.name);
        sb.append("</td><td>")
        sb.append(arg.type);
        sb.append("</td><td>")
        if (isBasicType(arg.type)) {
            sb.append("<input type=text width=400 ");
            sb.append("id=\"").append(arg.name).append("\" >");
        } else {
            sb.append("<textarea type=text cols=50 row=4 ");
            sb.append("id=\"").append(arg.name).append("\">");
            sb.append("var ").append(arg.name).append(" = new sforce.Xml();")
            sb.append("</textarea>");
        }
        sb.append("</td></tr>");
    }
    sb.append("<tr><td>Result</td><td>").append(fun.returnType).append("</td><td>");
    sb.append("<input type=submit name=Invoke value=Invoke ");
    sb.append("onClick=\"javascript: exec(");
    sb.append(index).append("); void 0;\" ></td></tr>");
    sb.append("</table>");
    document.getElementById("function-test").innerHTML = sb.toString();
}

function isBasicType(type) {
    if ("String" == type || "Integer" == type || "Double" == type ||
        "Boolean" == type) {
        return true;
    } else {
        return false;
    }
}

function exec(index) {
    var fun = functions[index];
    var pkg = "";
    if (classPrefix) {
        pkg = classPrefix + "/";
    }
    pkg += className;
    pkg = pkg.replace(/\./g, "/");

    var params = {};
    for (var i = 0; i < fun.args.length; i++) {
        var arg = fun.args[i];
        if (isBasicType(arg.type)) {
            params[arg.name] = document.getElementById(arg.name).value;
        } else {
            var script = document.getElementById(arg.name).value + "\n" + arg.name + ";";
            params[arg.name] = eval(script);
        }
    }

    var sb = new sforce.StringBuffer();
    try {
        var result = sforce.apex.execute(pkg, fun.name, params);
        convert(result, sb, true);
        document.getElementById("function-result").innerHTML = sb.toString();
    } catch(error) {
        convert(error, sb, true);
        document.getElementById("function-result").innerHTML = sb.toString();
    }
}

function webServiceFunction(ftags) {
    var wsFunction = {};
    wsFunction.args = [];
    // skip webservice
    nextTag(ftags);
    wsFunction.returnType = nextTag(ftags);
    
    //skip the static keyword
    if (wsFunction.returnType === "static") {
        wsFunction.returnType = nextTag(ftags);
    }

    var tag = nextTag(ftags);
    if (tag == "[") {
        nextTag(ftags);
        wsFunction.returnType += "[]";
        wsFunction.name = nextTag(ftags);
    } else {
        wsFunction.name = tag;
    }
    nextTag(ftags);
    // (

    while (true) {
        var tag = nextTag(ftags);
        if (tag === null || tag === ")") break;
        var arg = {};
        arg.type = tag;
        tag = nextTag(ftags);
        if (tag == "[") {
            nextTag(ftags);
            arg.type += "[]";
            arg.name = nextTag(ftags);
        } else {
            arg.name = tag;
        }
        wsFunction.args.push(arg);
        nextTag(ftags);
    }

    return wsFunction;
}

function nextTag(tags) {
    while (tags.length > 0) {
        var tag = tags[0];
        tags.splice(0, 1);
        if (tag !== " " && tag !== "\n" && tag !== "\r" && tag !== "" && tag !== null) {
            return tag;
        }
    }
    return null;
}

dojo.addOnLoad(init);

function lex(code) {
    var buf = [];
    var result = [];
    for (var i = 0; i < code.length; i++) {
        var ch = code[i];
        if (" \n\r,\t(){}[]".indexOf(ch) != -1) {
            result.push(buf.join(""));
            buf = [];
            result.push(ch);
        } else {
            buf.push(ch);
        }
    }
    return result;
}


//----------- table display

function convert(s, sb, isFirst) {
    if (s == null) {
        sb.append("null");
        return;
    }

    var tof = typeof s;

    if (tof == "string" || tof == "number" || tof == "function") {
        sb.append(s);
        return;
    } else if (tof == "object") {
        if (s.push && s.length > 0 && (typeof s[0] === "object")) {
            sb.append(makeExpandLink(isFirst) + "<table>");
            var heading = findHeading(s);
            sb.append("<tr>");
            for (var head in heading) {
                sb.append("<td><b>" + head + "</b></td>");
            }
            sb.append("</tr>");
            for (var i=0; i<s.length; i++) {
                sb.append("<tr>");
                for (var head in heading) {
                    sb.append("<td>");
                    convert(s[i][head], sb, false);
                    sb.append("</td>");
                }
                sb.append("</tr>");
            }
            sb.append("</table></span>");
        } else {
            sb.append(makeExpandLink(isFirst) + "<table>" );
            var arrays = [];
            for (var a in s) {
                if (typeof s[a] == "function") {
                    //skip
                } else if (s[a] && s[a].push) {
                    arrays[a] = s[a];
                } else {
                    sb.append("<tr><td><b>" + a + "</b></td><td>");
                    convert(s[a], sb, false);
                    sb.append("</td></tr>");
                }
            }
            for (var a in arrays) {
                sb.append("<tr><td colspan='2'>");
                sb.append("<b>" + a + "</b>");
                convert(arrays[a], sb, false);
                sb.append("</td></tr>")
            }
            sb.append("</table></span>");
        }
    }
}

var _linkCount = 0;
function makeExpandLink(isFirst) {
    _linkCount++;
    var rand = new Date().getTime() + "-" + _linkCount;
    var display = isFirst ? "block" : "none";
    //return "<img src=\"/img/recurring_activity.gif\" onclick='javascript: displayElement(\""+ rand +"\"); void 0;'>" +
           //"<span style='display: " + display + "' id='" + rand + "'>";
    var img = isFirst ? "/js/dojo/0.4.1/src/widget/templates/images/treenode_expand_minus.gif" :
              "/js/dojo/0.4.1/src/widget/templates/images/treenode_expand_plus.gif";

    return "<img id=\"" + rand + "-img\" src=\""+ img + "\" " +
           "onclick='javascript: displayElement(\"" + rand + "\"); void 0;'>" +
           "<span style='display: " + display + "' id='" + rand + "'>";
}

function displayElement(id) {
    var doc = document.getElementById(id);
    if (doc.style.display == 'none') {
        doc.style.display = 'block';
        document.getElementById(id + "-img").src =
            "/js/dojo/0.4.1/src/widget/templates/images/treenode_expand_minus.gif";
    } else {
        doc.style.display = 'none';
        document.getElementById(id + "-img").src =
            "/js/dojo/0.4.1/src/widget/templates/images/treenode_expand_plus.gif";
    }
}

function findHeading(array) {
    var heading = [];
    for (var i=0; i<array.length; i++) {
        for (var a in array[i]) {
            if (typeof array[i][a] != "function") {
                heading[a] = true;
            }
        }
    }
    return heading;
}

//------------- end table display

</script>

<style>

    .dojoDialog {
        background: #eee;
        border: 1px solid #999;
        -moz-border-radius: 5px;
        padding: 4px;
    }

    img {
        border: 0;
    }

    .dojoSplitPane {
        margin: 5px;
    }

    #rightPane {
        margin: 0;
    }

    TABLE {
        border-collapse: collapse;
        border: 1px solid black;
        font-size: 12px;
    }

    *#col1 {
        border: 3px solid black;
    }

    TD {
        border: 1px dotted green;
        padding: .25em;
    }

    TD.solid-blue {
        border: 5px dashed blue;
    }

    TD.dotted-black {
        border: 0px dotted black;
        padding: 10px;
    }

    TD.solid-green {
        border: 5px solid green;
    }
</style>

</head>
<body>

<h1>Test page for <span id="title-div"></span></h1>

<table width="600">
    <tr>
        <td width="30%">
            <h3>Web Service Methods</h3>

            <div id="function-list"></div>
        </td>
        <td width="70%">
            <h2>Function: <span id="function-title"></span></h2>

            <div id="function-test">
                Please select a method from the list of methods on the left coloum
            </div>
            <div id="function-result">
            </div>
        </td>
    </tr>
</table>

</body>
</html>